<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-US">
<title>Source Code</title>
<link type="text/css" rel="stylesheet" href="sh_style.css">
<script type="text/javascript" src="sh_main.js"></script>
<script type="text/javascript" src="lang/sh_cpp.js"></script>
</head><body lang="en-US" link=blue alink=blue vlink=blue onload="sh_highlightDocument()">
<p align=center><font size=4 color=#333399>Source Code</font></p>
<table align="center" style="font-size:10pt"><tr><td><b>Problem:</b> <a href="problem?id=2182">2182</a></td><td width=10px></td><td><b>User:</b> <a href="userstatus?user_id=T6">T6</a></td></tr>
<tr><td><b>Memory:</b> 412K</td><td width=10px></td><td><b>Time:</b> 16MS</td></tr>
<tr><td><b>Language:</b> G++</td><td width=10px></td><td><b>Result:</b> <font color=blue>Accepted</font></td></tr></table>
<ul><li><font color=#333399 size=5>Source Code</font></li>
<pre class="sh_cpp" style="font-family:Courier New,Courier,monospace">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#define MAXN 8005
#define lowbit(x) ((x ^ (x - 1)) &#38; x)
int count[MAXN]={0};
int num[MAXN]={0};
char use[MAXN]={0};
int way[MAXN];
int n;
void add(int x)
{
        while (x &lt;= n)
        {
                count[x]++;
                x += lowbit(x);
        }
}

void minus(int x)
{
        while (x &lt;= n)
        {
                count[x]--;
                x += lowbit(x);
        }
}

int sum(int x)
{
        int i = 0;
        while (x &gt; 0)
        {
                i += count[x];
                x -= lowbit(x);
        }
        return i;
}

int main()
{
        int i,j,k,l,h,mid;
        scanf(&#34;%d&#34;,&#38;n);
        for (i = 1; i &lt;= n; i++) add(i);
        for (i = 1; i &lt; n; i++) scanf(&#34;%d&#34;,&#38;num[i]);
        num[0] = 0;
        for (i = n - 1; i &gt;= 0; i--)
        {
                l = 1; h = n;
                while (l &lt;= h)
                {
                        mid = (l + h) / 2;
                        k = sum(mid);
                        if (k &lt; num[i] + 1)
                                l = mid + 1;
                        else if (k &gt; num[i] + 1)
                                h = mid - 1;
                        else if (use[mid] == 1)
                                h = mid - 1;
                        else break;
                }
                way[i] = mid;
                use[mid] = 1;
                minus(mid);
        }
        for (i = 0; i &lt; n; i++)
                printf(&#34;%d\n&#34;,way[i]);
        return 0;
}

</pre>
</ul>
</body></html>
